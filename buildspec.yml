version: 0.2

phases:
  install:
    commands:
      - echo Checking for GraalVM CE 22.3.0...
      - |
        if [ ! -d "/usr/local/graalvm-ce-22.3.0" ]; then
          echo GraalVM CE 22.3.0 not found, installing...
          wget https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java17-linux-amd64-22.3.0.tar.gz
          tar zxvf graalvm-ce-java17-linux-amd64-22.3.0.tar.gz
          sudo mv graalvm-ce-java17-22.3.0 /usr/local/graalvm-ce-22.3.0
        fi
      - echo 'export PATH=/usr/local/graalvm-ce-22.3.0/bin:$PATH' >> ~/.bashrc
      - source ~/.bashrc
      
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      
  build:
    commands:
      - echo Show Version gradle java docker
      - ./gradlew --version
      - java --version
      - docker --version
      - echo Build started on `date`
      - echo Test
      - ./gradlew test
      - echo Building the Docker image...
      - ./gradlew bootBuildImage --imageName=$IMAGE_REPO_NAME:$IMAGE_TAG      
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo '[{"name":"$CONTAINER_NAME","imageUri":"$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"}]' > imagedefinitions.json


artifacts:
  files: imagedefinitions.json
cache:
  paths:
   - '/usr/local/graalvm-ce-22.3.0/**/*'